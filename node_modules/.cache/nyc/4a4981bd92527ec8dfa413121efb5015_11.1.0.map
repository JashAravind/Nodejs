{"version":3,"sources":["TextParser.js"],"names":["Converter","require","BusinessRuleMethod","fs","ProcessDataFromFile","ReadAndValidateDataFromFile","filePath","fn","filename","split","pop","existsSync","console","log","fileExtension","converter","fromFile","err","results","tranStatus","i","length","validationResults","applybusinessRules","push","module","exports"],"mappings":";;AACA,IAAIA,YAAYC,QAAQ,WAAR,EAAqBD,SAArC;AACA,IAAIE,qBAAqBD,QAAQ,0CAAR,CAAzB;;AAEA,IAAIE,KAAKF,QAAQ,IAAR,CAAT;;AAEA;;AAEA,IAAIG,sBAAsB;AACzBC,8BAA6B,qCAASC,QAAT,EAAmBC,EAAnB,EAAsB;;AAEjD,MAAIC,WAAWF,SAASG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAAf;;AAED,MAAIP,GAAGQ,UAAH,CAAcL,QAAd,CAAJ,EAA4B;AAC3BM,WAAQC,GAAR,CAAY,YAAZ;AACA,OAAIC,gBAAgBR,SAASG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAApB;AACA,OAAII,kBAAkB,KAAtB,EAA4B;AAC5BF,YAAQC,GAAR,CAAY,2BAAZ;AACG,QAAIE,YAAY,IAAIf,SAAJ,CAAc,EAAd,CAAhB;AACAe,cAAUC,QAAV,CAAmBV,QAAnB,EAA4B,UAASW,GAAT,EAAaC,OAAb,EAAqB;AAChD,SAAIC,aAAW,EAAf;AACA,UAAI,IAAIC,IAAI,CAAZ,EAAgBA,IAAGF,QAAQG,MAA3B,EAAkCD,GAAlC,EAAsC;;AAEzC,UAAIE,oBAAoBpB,mBAAmBqB,kBAAnB,CAAsCL,QAAQE,CAAR,CAAtC,CAAxB;AACA,UAAGE,kBAAkBD,MAAlB,GAAyB,CAA5B,EACA;AACCF,kBAAWK,IAAX,CAAgBF,iBAAhB;AAEA;AAEI;AACFf,QAAGY,UAAH;AACD,KAbA;AAcF,IAjBD,MAiBM;;AAEJZ,OAAG,mBAAH;AACD;AAED,GAzBD,MAyBM;AACFA,MAAG,oBAAH;AACH;AAED;AAlCwB,CAA1B;AAoCAkB,OAAOC,OAAP,GAAiBtB,mBAAjB","file":"TextParser.js","sourceRoot":"C:/Users/OfficePC/Desktop/NodejsAutomation/Utility","sourcesContent":["\r\nvar Converter = require('csvtojson').Converter;\r\nvar BusinessRuleMethod = require('../BusinessRulesValidation/businessRules')\r\n\r\nvar fs = require('fs');\r\n\r\n// transactions.ReadAndValidateTransactionData('./input/input1.txt');\r\n\r\nvar ProcessDataFromFile = {\r\n\tReadAndValidateDataFromFile: function(filePath, fn){\r\n\t\t\r\n\t\t var filename = filePath.split(\"/\").pop();\r\n\r\n\t\tif (fs.existsSync(filePath)){\r\n\t\t\tconsole.log('file exits');\r\n\t\t\tvar fileExtension = filePath.split('.').pop()\r\n\t\t\tif (fileExtension === 'txt'){\r\n\t\t\tconsole.log('file extension is correct');\r\n\t\t\t\t\t\tvar converter = new Converter({});\r\n\t\t\t\t\t\tconverter.fromFile(filePath,function(err,results){\r\n\t\t\t\t\t\t\tvar tranStatus=[];\r\n\t\t\t\t\t\t\tfor(var i = 0 ; i< results.length;i++){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tvar validationResults = BusinessRuleMethod.applybusinessRules(results[i]);\r\n\t\t\t\tif(validationResults.length>0)\r\n\t\t\t\t{\r\n\t\t\t\t\ttranStatus.push(validationResults);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\tfn(tranStatus);\r\n\t\t\t\t\t})\r\n\t\t\t}else {\r\n\t\t\t\t \r\n\t\t\t\t fn(\"Invalid File Type\");\r\n\t\t\t}\r\n\r\n\t\t}else {\r\n\t\t\t\t  fn(\"File do not exists\");\r\n\t\t}\r\n\r\n\t}\r\n};\r\nmodule.exports = ProcessDataFromFile;"]}