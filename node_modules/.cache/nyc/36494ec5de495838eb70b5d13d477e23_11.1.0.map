{"version":3,"sources":["businessRules.js"],"names":["Converter","require","fs","DateTimeMethod","numberValidationMethod","amountValidationMethod","BusinessRuleMethod","applybusinessRules","jsonObj","validationResults","obj","transactionkey","numberValidation","resultobj","Object","txid","description","jsonString","JSON","stringify","push","amountValidation","dateValidation","module","exports"],"mappings":";;AACA,IAAIA,YAAYC,QAAQ,WAAR,EAAqBD,SAArC;AACA,IAAIE,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,iBAAiBF,QAAQ,+CAAR,CAArB;AACA,IAAIG,yBAAyBH,QAAQ,4CAAR,CAA7B;AACA,IAAII,yBAAyBJ,QAAQ,gDAAR,CAA7B;;AAEA,IAAIK,qBAAqB;;AAEpBC,qBAAmB,4BAASC,OAAT,EACnB;AACC,MAAIC,oBAAoB,EAAxB;;AAEA,OAAK,IAAIC,GAAT,IAAgBF,OAAhB,EAAyB;;AAExB,OAAIG,iBAAiBH,QAAQ,CAAR,CAArB;;AAGO,WAAQE,GAAR;AACL,SAAK,MAAL;;AAGC,SAAIE,mBAAmBR,uBAAuBQ,gBAAvB,CAAwCJ,QAAQE,GAAR,CAAxC,CAAvB;AACM,SAAI,CAACE,gBAAL,EACC;AACK,UAAIC,YAAY,IAAIC,MAAJ,EAAhB;AACND,gBAAUE,IAAV,GAAiBJ,cAAjB;AACAE,gBAAUG,WAAV,GAAyB,kDAAzB;AACA,UAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAJ,wBAAkBW,IAAlB,CAAuBP,SAAvB;AACJ;AACI;;AAEP,SAAK,UAAL;AACO,SAAIL,QAAQE,GAAR,KAAc,EAAlB,EACC;AACE,UAAIG,YAAY,IAAIC,MAAJ,EAAhB;AACHD,gBAAUE,IAAV,GAAiBJ,cAAjB;AACAE,gBAAUG,WAAV,GAAyB,+CAAzB;AACA,UAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAJ,wBAAkBW,IAAlB,CAAuBP,SAAvB;AAEJ;;AAEE;AACL,SAAK,WAAL;AACO,SAAI,CAACR,uBAAuBgB,gBAAvB,CAAwCb,QAAQE,GAAR,CAAxC,CAAL,EACC;AACD,UAAIG,YAAY,IAAIC,MAAJ,EAAhB;AACAD,gBAAUE,IAAV,GAAiBJ,cAAjB;AACAE,gBAAUG,WAAV,GAAyB,2DAAzB;AACA,UAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAJ,wBAAkBW,IAAlB,CAAuBP,SAAvB;AAED;AACC;AACP,SAAK,SAAL;;AAGO;AACP,SAAK,UAAL;;AAEC,SAAG,CAACV,eAAemB,cAAf,CAA8Bd,QAAQE,GAAR,CAA9B,CAAJ,EACA;AACU,UAAIG,YAAY,IAAIC,MAAJ,EAAhB;AACJD,gBAAUE,IAAV,GAAiBJ,cAAjB;AACAE,gBAAUG,WAAV,GAAyB,iEAAzB;AACA,UAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAJ,wBAAkBW,IAAlB,CAAuBP,SAAvB;AAEL;AACK;AACJ;;AAEO,SAAIA,YAAY,IAAIC,MAAJ,EAAhB;AACHD,eAAUE,IAAV,GAAiBJ,cAAjB;AACAE,eAAUG,WAAV,GAAyB,6CAAzB;AACA,SAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAJ,uBAAkBW,IAAlB,CAAuBP,SAAvB;;AA5DF;;AAiEE;AACD;;AAEP,SAAOJ,iBAAP;AAED;AAjFkB,CAAzB;;AAwFAc,OAAOC,OAAP,GAAiBlB,kBAAjB","file":"businessRules.js","sourceRoot":"C:/Users/OfficePC/Desktop/NodejsAutomation/BusinessRulesValidation","sourcesContent":["\r\nvar Converter = require('csvtojson').Converter;\r\nvar fs = require('fs');\r\nvar DateTimeMethod = require('../BusinessRulesValidation/dateTimevalidation');\r\nvar numberValidationMethod = require('../BusinessRulesValidation/txnIdValidation');\r\nvar amountValidationMethod = require('../BusinessRulesValidation/txnAmountvalidation');\r\n\r\nvar BusinessRuleMethod = {\r\n\r\n\t\t\t\t\tapplybusinessRules:function(jsonObj)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar validationResults = [];\r\n\r\n\t\t\t\t\t\tfor (var obj in jsonObj) {\r\n\r\n\t\t\t\t\t\t\tvar transactionkey = jsonObj[0];\r\n\r\n\r\n\t\t\t\t\t\t        switch (obj) {\r\n\t\t\t\t\t\t\t\t\tcase 'txid':\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tvar numberValidation = numberValidationMethod.numberValidation(jsonObj[obj]);\r\n\t\t\t\t\t\t\t\t        if (!numberValidation)\r\n\t\t\t\t\t\t\t\t        \t{\r\n\t\t\t\t\t\t\t\t        \t\t\t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = transactionkey;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Transaction id cannot be string or alphanumberic\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t        break;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcase 'clientid':\r\n\t\t\t\t\t\t\t\t        if (jsonObj[obj]=='') \r\n\t\t\t\t\t\t\t\t        \t{\r\n\t\t\t\t\t\t\t\t    \t\t\t\t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = transactionkey;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Client id for the key cannot be null or empty\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t    \t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'txnamount': \r\n\t\t\t\t\t\t\t\t        if (!amountValidationMethod.amountValidation(jsonObj[obj])) \r\n\t\t\t\t\t\t\t\t        \t{\t\t        \t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = transactionkey;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Transaction Amount for the key  is not in expected format\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\r\n\t\t\t\t\t\t\t\t    \t\t}\r\n\t\t\t\t\t\t\t\t        break;\r\n\t\t\t\t\t\t\t\t\tcase 'product':\r\n\t\t\t\t\t\t\t\t       \r\n\r\n\t\t\t\t\t\t\t\t        break;\r\n\t\t\t\t\t\t\t\t\tcase 'datetime':\r\n\r\n\t\t\t\t\t\t\t\t\t\tif(!DateTimeMethod.dateValidation(jsonObj[obj]))\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t     \t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = transactionkey;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Date time provided for the key is either in future or not valid\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t        break;\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t    default:\r\n\r\n\t\t\t\t\t\t\t\t    \t\t\t\t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = transactionkey;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Unexpected key and this key is not handled'\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\t\t\t\t\t\t\t\t    \t\r\n\t\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t        break;\r\n\t\t\t\t\t\t        };\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn validationResults;\r\n\r\n\t\t\t\t\t\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = BusinessRuleMethod;"]}