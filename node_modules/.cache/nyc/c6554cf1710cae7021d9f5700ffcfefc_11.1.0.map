{"version":3,"sources":["businessRules.js"],"names":["Converter","require","fs","dateTimevalidation","txnIdValidation","txnAmountvalidation","BusinessRuleMethod","applybusinessRules","jsonObj","console","log","validationResults","obj","numberValidation","push","amountValidation","dateValidation","module","exports"],"mappings":";;AACA,IAAIA,YAAYC,QAAQ,WAAR,EAAqBD,SAArC;AACA,IAAIE,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,qBAAqBF,QAAQ,kCAAR,CAAzB;AACA,IAAIG,kBAAkBH,QAAQ,+BAAR,CAAtB;AACA,IAAII,sBAAsBJ,QAAQ,mCAAR,CAA1B;;AAEA,IAAIK,qBAAqB;;AAEzBC,qBAAmB,4BAASC,OAAT,EACnB;AACCC,UAAQC,GAAR,CAAY,SAAZ;;AAEA,MAAIC,oBAAoB,EAAxB;;AAEA,OAAK,IAAIC,GAAT,IAAgBJ,OAAhB,EAAyB;;AAEjB,WAAQI,GAAR;AACL,SAAK,MAAL;AACO,SAAI,CAACR,gBAAgBS,gBAAhB,CAAiCL,QAAQI,GAAR,CAAjC,CAAL,EACC;;AAEM,UAAIA,MAAM;AACnB,eAAQJ,QAAQI,GAAR,CADW;AAEnB,sBAAe;;AAFI,OAAV;AAKbD,wBAAkBG,IAAlB,CAAuBF,GAAvB;AAEK;AACC;AACP,SAAK,UAAL;AACO,SAAIJ,QAAQI,GAAR,KAAc,EAAlB,EACC;AACa,UAAIA,MAAM;AAC1B,eAAQJ,QAAQI,GAAR,CADkB;AAE1B,sBAAe;;AAFW,OAAV;AAKpBD,wBAAkBG,IAAlB,CAAuBF,GAAvB;AAEK;AACC;AACP,SAAK,WAAL;AAAkB;AACX,SAAI,CAACP,oBAAoBU,gBAApB,CAAqCP,QAAQI,GAAR,CAArC,CAAL,EACC;;AAEX,UAAIA,MAAM;AACF,eAAQJ,QAAQI,GAAR,CADN;AAEF,sBAAe;;AAFb,OAAV;AAKID,wBAAkBG,IAAlB,CAAuBF,GAAvB;AAGK;AACC;AACP,SAAK,SAAL;;AAGO;AACP,SAAK,UAAL;;AAEC,SAAG,CAACT,mBAAmBa,cAAnB,CAAkCR,QAAQI,GAAR,CAAlC,CAAJ,EACA;AACC,UAAIA,MAAM;AACP,eAAQJ,QAAQI,GAAR,CADD;AAEP,sBAAe;;AAFR,OAAV;AAKDD,wBAAkBG,IAAlB,CAAuBF,GAAvB;AAEC;AACK;AACJ;;AAED,SAAIA,MAAM;AACP,cAAQJ,QAAQI,GAAR,CADD;AAEP,qBAAe;;AAFR,MAAV;AAKDD,uBAAkBG,IAAlB,CAAuBF,GAAvB;AACM;AAjEF,IAkEC;AAGR;;AAEF,SAAOD,iBAAP;AAEC;;AAnFwB,CAAzB;;AAuFAM,OAAOC,OAAP,GAAiBZ,kBAAjB","file":"businessRules.js","sourceRoot":"C:/Users/OfficePC/Desktop/Nodejspractise/appliation","sourcesContent":["\r\nvar Converter = require('csvtojson').Converter;\r\nvar fs = require('fs');\r\nvar dateTimevalidation = require('../appliation/dateTimevalidation');\r\nvar txnIdValidation = require('../appliation/txnIdValidation');\r\nvar txnAmountvalidation = require('../appliation/txnAmountvalidation');\r\n\r\nvar BusinessRuleMethod = {\r\n\r\napplybusinessRules:function(jsonObj)\r\n{\r\n\tconsole.log(\"entered\");\r\n\r\n\tvar validationResults = [];\r\n\r\n\tfor (var obj in jsonObj) {\r\n\r\n\t        switch (obj) {\r\n\t\t\t\tcase 'txid':\r\n\t\t\t        if (!txnIdValidation.numberValidation(jsonObj[obj]))\r\n\t\t\t        \t{\r\n\t\t\t\t\t\t\t\t        \t\t\r\n\t\t\t\t\t\t\t\t        \t\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'txid is not in number format',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\r\n\t\t\t    \t\t}\r\n\t\t\t        break;\r\n\t\t\t\tcase 'clientid':\r\n\t\t\t        if (jsonObj[obj]=='') \r\n\t\t\t        \t{\r\n\t\t\t        \t\t\t\t        \t\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'client id cannot be null or empty',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\r\n\t\t\t    \t\t}\r\n\t\t\t        break;\r\n\t\t\t\tcase 'txnamount': // assuming amount is number format checking if valus is Not a number\r\n\t\t\t        if (!txnAmountvalidation.amountValidation(jsonObj[obj])) \r\n\t\t\t        \t{\t\t        \t\r\n\t\t\t        \t\t\r\n\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'txnamount is not in expected format',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\r\n\r\n\t\t\t    \t\t}\r\n\t\t\t        break;\r\n\t\t\t\tcase 'product':\r\n\t\t\t       \r\n\r\n\t\t\t        break;\r\n\t\t\t\tcase 'datetime':\r\n\r\n\t\t\t\t\tif(!dateTimevalidation.dateValidation(jsonObj[obj]))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'Date time provided is either in future or not valid',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t        break;\t\t\t\t\t\r\n\t\t\t    default:\r\n\t\t\t    \t\r\n\t\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'unexpected key and this key is not handled',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\t\t\t        break;\r\n\t        };\r\n\r\n\r\n\t}\r\n\r\nreturn validationResults;\r\n\r\n}\r\n\r\n}\r\n\r\nmodule.exports = BusinessRuleMethod;"]}