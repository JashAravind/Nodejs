{"version":3,"sources":["businessRules.js"],"names":["Converter","require","fs","DateTimeMethod","numberValidationMethod","amountValidationMethod","BusinessRuleMethod","applybusinessRules","jsonObj","console","log","validationResults","obj","numberValidation","resultobj","Object","txid","description","jsonString","JSON","stringify","push","amountValidation","dateValidation","module","exports"],"mappings":";;AACA,IAAIA,YAAYC,QAAQ,WAAR,EAAqBD,SAArC;AACA,IAAIE,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,iBAAiBF,QAAQ,kCAAR,CAArB;AACA,IAAIG,yBAAyBH,QAAQ,+BAAR,CAA7B;AACA,IAAII,yBAAyBJ,QAAQ,mCAAR,CAA7B;;AAEA,IAAIK,qBAAqB;;AAEpBC,qBAAmB,4BAASC,OAAT,EACnB;AACCC,UAAQC,GAAR,CAAY,SAAZ;;AAEA,MAAIC,oBAAoB,EAAxB;;AAEA,OAAK,IAAIC,GAAT,IAAgBJ,OAAhB,EAAyB;;AAExBC,WAAQC,GAAR,CAAY,mCAAkCE,GAA9C;;AAEO,WAAQA,GAAR;AACL,SAAK,MAAL;;AAEAH,aAAQC,GAAR,CAAY,oBAAZ;AACC,SAAIG,mBAAmBT,uBAAuBS,gBAAvB,CAAwCL,QAAQI,GAAR,CAAxC,CAAvB;AACM,SAAI,CAACC,gBAAL,EACC;AACK,UAAIC,YAAY,IAAIC,MAAJ,EAAhB;AACND,gBAAUE,IAAV,GAAiBJ,GAAjB;AACAE,gBAAUG,WAAV,GAAyB,kDAAzB;AACA,UAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAH,wBAAkBU,IAAlB,CAAuBP,SAAvB;AACJ;AACI;;AAEP,SAAK,UAAL;AACO,SAAIN,QAAQI,GAAR,KAAc,EAAlB,EACC;AACE,UAAIE,YAAY,IAAIC,MAAJ,EAAhB;AACHD,gBAAUE,IAAV,GAAiBJ,GAAjB;AACAE,gBAAUG,WAAV,GAAyB,+CAAzB;AACA,UAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAH,wBAAkBU,IAAlB,CAAuBP,SAAvB;AAEJ;;AAEE;AACL,SAAK,WAAL;AAAkB;AACX,SAAI,CAACT,uBAAuBiB,gBAAvB,CAAwCd,QAAQI,GAAR,CAAxC,CAAL,EACC;AACD,UAAIE,YAAY,IAAIC,MAAJ,EAAhB;AACAD,gBAAUE,IAAV,GAAiBJ,GAAjB;AACAE,gBAAUG,WAAV,GAAyB,2DAAzB;AACA,UAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAH,wBAAkBU,IAAlB,CAAuBP,SAAvB;AAED;AACC;AACP,SAAK,SAAL;;AAGO;AACP,SAAK,UAAL;;AAEC,SAAG,CAACX,eAAeoB,cAAf,CAA8Bf,QAAQI,GAAR,CAA9B,CAAJ,EACA;AACU,UAAIE,YAAY,IAAIC,MAAJ,EAAhB;AACJD,gBAAUE,IAAV,GAAiBJ,GAAjB;AACAE,gBAAUG,WAAV,GAAyB,iEAAzB;AACA,UAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAH,wBAAkBU,IAAlB,CAAuBP,SAAvB;AAEL;AACK;AACJ;;AAEO,SAAIA,YAAY,IAAIC,MAAJ,EAAhB;AACHD,eAAUE,IAAV,GAAiBJ,GAAjB;AACAE,eAAUG,WAAV,GAAyB,6CAAzB;AACA,SAAIC,aAAYC,KAAKC,SAAL,CAAeN,SAAf,CAAhB;AACAH,uBAAkBU,IAAlB,CAAuBP,SAAvB;;AA5DF;;AAiEE;AACD;;AAEP,SAAOH,iBAAP;AAED;AAlFkB,CAAzB;;AAyFAa,OAAOC,OAAP,GAAiBnB,kBAAjB","file":"businessRules.js","sourceRoot":"C:/Users/OfficePC/Desktop/Nodejspractise/appliation","sourcesContent":["\r\nvar Converter = require('csvtojson').Converter;\r\nvar fs = require('fs');\r\nvar DateTimeMethod = require('../appliation/dateTimevalidation');\r\nvar numberValidationMethod = require('../appliation/txnIdValidation');\r\nvar amountValidationMethod = require('../appliation/txnAmountvalidation');\r\n\r\nvar BusinessRuleMethod = {\r\n\r\n\t\t\t\t\tapplybusinessRules:function(jsonObj)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.log(\"entered\");\r\n\r\n\t\t\t\t\t\tvar validationResults = [];\r\n\r\n\t\t\t\t\t\tfor (var obj in jsonObj) {\r\n\r\n\t\t\t\t\t\t\tconsole.log(\"object going to switch loop - \"+ obj);\r\n\r\n\t\t\t\t\t\t        switch (obj) {\r\n\t\t\t\t\t\t\t\t\tcase 'txid':\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"Enetred txid case \");\r\n\t\t\t\t\t\t\t\t\t\tvar numberValidation = numberValidationMethod.numberValidation(jsonObj[obj]);\r\n\t\t\t\t\t\t\t\t        if (!numberValidation)\r\n\t\t\t\t\t\t\t\t        \t{\r\n\t\t\t\t\t\t\t\t        \t\t\t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = obj;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Transaction id cannot be string or alphanumberic\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t        break;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcase 'clientid':\r\n\t\t\t\t\t\t\t\t        if (jsonObj[obj]=='') \r\n\t\t\t\t\t\t\t\t        \t{\r\n\t\t\t\t\t\t\t\t    \t\t\t\t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = obj;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Client id for the key cannot be null or empty\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t    \t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'txnamount': // assuming amount is number format checking if valus is Not a number\r\n\t\t\t\t\t\t\t\t        if (!amountValidationMethod.amountValidation(jsonObj[obj])) \r\n\t\t\t\t\t\t\t\t        \t{\t\t        \t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = obj;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Transaction Amount for the key  is not in expected format\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\r\n\t\t\t\t\t\t\t\t    \t\t}\r\n\t\t\t\t\t\t\t\t        break;\r\n\t\t\t\t\t\t\t\t\tcase 'product':\r\n\t\t\t\t\t\t\t\t       \r\n\r\n\t\t\t\t\t\t\t\t        break;\r\n\t\t\t\t\t\t\t\t\tcase 'datetime':\r\n\r\n\t\t\t\t\t\t\t\t\t\tif(!DateTimeMethod.dateValidation(jsonObj[obj]))\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t     \t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = obj;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Date time provided for the key is either in future or not valid\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t        break;\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t    default:\r\n\r\n\t\t\t\t\t\t\t\t    \t\t\t\t   var resultobj = new Object();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.txid = obj;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   resultobj.description  = \"Unexpected key and this key is not handled'\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   var jsonString= JSON.stringify(resultobj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   validationResults.push(resultobj);\r\n\t\t\t\t\t\t\t\t    \t\r\n\t\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t        break;\r\n\t\t\t\t\t\t        };\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn validationResults;\r\n\r\n\t\t\t\t\t\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = BusinessRuleMethod;"]}