{"version":3,"sources":["dateTimevalidation.js"],"names":["DateTimeMethod","dateValidation","dateVal","retval","givenDate","Date","parse","currentDate","module","exports"],"mappings":";;AAAA,IAAIA,iBAAiB;;AAErBC,iBAAe,wBAAUC,OAAV,EACf;AACC,MAAIC,SAAS,IAAb;AACA,MAAIC,YAAY,IAAIC,IAAJ,CAASA,KAAKC,KAAL,CAAWJ,OAAX,CAAT,CAAhB;AACA,MAAIK,cAAc,IAAIF,IAAJ,EAAlB,CAHD,CAG+B;;AAE9B,MAAID,aAAW,cAAf,EAA+B;AAC9BD,YAAS,KAAT;AACA;AACD;AAHA,OAIK,IAAIC,YAAWG,WAAf,EAA4B;AAChCJ,aAAS,KAAT;AACA;;AAED,SAAOA,MAAP;AACA;;AAjBoB,CAArB;AAoBAK,OAAOC,OAAP,GAAiBT,cAAjB","file":"dateTimevalidation.js","sourceRoot":"C:/Users/OfficePC/Desktop/NodejsAutomation/BusinessRulesValidation","sourcesContent":["var DateTimeMethod = {\r\n\r\ndateValidation:function (dateVal)\r\n{\r\n\tvar retval = true;\r\n\tvar givenDate = new Date(Date.parse(dateVal));\r\n\tvar currentDate = new Date(); //todays date to check if given date is in future\r\n\r\n\tif (givenDate=='Invalid Date') {\r\n\t\tretval = false;\r\n\t}\r\n\t//to check if date is in future if date is valid\r\n\telse if (givenDate> currentDate) {\r\n\t\tretval = false;\r\n\t}\r\n\r\n\treturn retval;\r\n}\r\n\r\n}\r\nmodule.exports = DateTimeMethod;"]}