{"version":3,"sources":["1.js"],"names":["Converter","require","fs","ProcessDataFromFile","ReadAndValidateDataFromFile","filePath","fn","existsSync","console","log","fileExtension","split","pop","converter","fromFile","err","results","tranStatus","i","length","validationResults","businessRules","applybusinessRules","CombinedResults","push","module","exports"],"mappings":";;AAAA;;;;;;;;;AASA,IAAIA,YAAYC,QAAQ,WAAR,EAAqBD,SAArC;;AAEA,IAAIE,KAAKD,QAAQ,IAAR,CAAT;;AAEA;;AAEA,IAAIE,sBAAsB;AACzBC,8BAA6B,qCAASC,QAAT,EAAmBC,EAAnB,EAAsB;;AAElD,MAAIJ,GAAGK,UAAH,CAAcF,QAAd,CAAJ,EAA4B;AAC3BG,WAAQC,GAAR,CAAY,YAAZ;AACA,OAAIC,gBAAgBL,SAASM,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAApB;AACA,OAAIF,kBAAkB,KAAtB,EAA4B;AAC5BF,YAAQC,GAAR,CAAY,2BAAZ;AACG,QAAII,YAAY,IAAIb,SAAJ,CAAc,EAAd,CAAhB;AACAa,cAAUC,QAAV,CAAmBT,QAAnB,EAA4B,UAASU,GAAT,EAAaC,OAAb,EAAqB;AAChD,SAAIC,aAAW,EAAf;AACA,UAAI,IAAIC,IAAI,CAAZ,EAAgBA,IAAGF,QAAQG,MAA3B,EAAkCD,GAAlC,EAAsC;;AAEzC,UAAIE,oBAAoBC,cAAcC,kBAAd,CAAiCN,QAAQE,CAAR,CAAjC,CAAxB;AACAK,sBAAgBC,IAAhB,CAAqBJ,iBAArB;AAEK;AACFd,QAAGW,UAAH;AACD,KATA;AAUF,IAbD,MAaM;AACLX,OAAG,mBAAH;AACA;AAED,GApBD,MAoBM;AACLA,MAAG,oBAAH;AACA;AAED;AA3BwB,CAA1B;AA6BAmB,OAAOC,OAAP,GAAiBvB,mBAAjB","file":"1.js","sourceRoot":"C:/Users/OfficePC/Desktop/Nodejspractise/appliation","sourcesContent":["/* \r\nDescription:  Main application which reads data from file and validates data\r\nInput : File path\r\nHow it Works:\r\n\t1. Checks if file exists , \r\n\t2. if yes checks if file extension is correct \r\n\t3. Converts file data to Json array and passes it on to data validation method\r\n\t5. Returns appropriate error message if file doesn't exists of if file extension is not correct\r\n*/\r\nvar Converter = require('csvtojson').Converter;\r\n\r\nvar fs = require('fs');\r\n\r\n// transactions.ReadAndValidateTransactionData('./input/input1.txt');\r\n\r\nvar ProcessDataFromFile = {\r\n\tReadAndValidateDataFromFile: function(filePath, fn){\r\n\t\t\r\n\t\tif (fs.existsSync(filePath)){\r\n\t\t\tconsole.log('file exits');\r\n\t\t\tvar fileExtension = filePath.split('.').pop()\r\n\t\t\tif (fileExtension === 'txt'){\r\n\t\t\tconsole.log('file extension is correct');\r\n\t\t\t\t\t\tvar converter = new Converter({});\r\n\t\t\t\t\t\tconverter.fromFile(filePath,function(err,results){\r\n\t\t\t\t\t\t\tvar tranStatus=[];\r\n\t\t\t\t\t\t\tfor(var i = 0 ; i< results.length;i++){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tvar validationResults = businessRules.applybusinessRules(results[i])\r\n\t\t\t\tCombinedResults.push(validationResults)\t;\t\t\r\n\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\tfn(tranStatus);\r\n\t\t\t\t\t})\r\n\t\t\t}else {\r\n\t\t\t\tfn('Invalid File Type');\r\n\t\t\t}\r\n\r\n\t\t}else {\r\n\t\t\tfn('File do not exists');\r\n\t\t}\r\n\r\n\t}\r\n};\r\nmodule.exports = ProcessDataFromFile;"]}