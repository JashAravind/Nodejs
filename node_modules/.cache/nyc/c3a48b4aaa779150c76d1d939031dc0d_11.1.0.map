{"version":3,"sources":["TextParser.js"],"names":["Converter","require","BusinessRuleMethod","fs","ProcessDataFromFile","ReadAndValidateDataFromFile","filePath","fn","existsSync","console","log","fileExtension","split","pop","converter","fromFile","err","results","tranStatus","i","length","validationResults","applybusinessRules","push","module","exports"],"mappings":";;AACA,IAAIA,YAAYC,QAAQ,WAAR,EAAqBD,SAArC;AACA,IAAIE,qBAAqBD,QAAQ,0CAAR,CAAzB;;AAEA,IAAIE,KAAKF,QAAQ,IAAR,CAAT;;AAEA;;AAEA,IAAIG,sBAAsB;AACzBC,8BAA6B,qCAASC,QAAT,EAAmBC,EAAnB,EAAsB;;AAElD,MAAIJ,GAAGK,UAAH,CAAcF,QAAd,CAAJ,EAA4B;AAC3BG,WAAQC,GAAR,CAAY,YAAZ;AACA,OAAIC,gBAAgBL,SAASM,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAApB;AACA,OAAIF,kBAAkB,KAAtB,EAA4B;AAC5BF,YAAQC,GAAR,CAAY,2BAAZ;AACG,QAAII,YAAY,IAAId,SAAJ,CAAc,EAAd,CAAhB;AACAc,cAAUC,QAAV,CAAmBT,QAAnB,EAA4B,UAASU,GAAT,EAAaC,OAAb,EAAqB;AAChD,SAAIC,aAAW,EAAf;AACA,UAAI,IAAIC,IAAI,CAAZ,EAAgBA,IAAGF,QAAQG,MAA3B,EAAkCD,GAAlC,EAAsC;;AAEzC,UAAIE,oBAAoBnB,mBAAmBoB,kBAAnB,CAAsCL,QAAQE,CAAR,CAAtC,CAAxB;AACAV,cAAQC,GAAR,CAAY,yBAAuBW,iBAAnC;AACAH,iBAAWK,IAAX,CAAgBF,iBAAhB;AAEK;AACFd,QAAGW,UAAH;AACD,KAVA;AAWF,IAdD,MAcM;AACLX,OAAG,mBAAH;AACA;AAED,GArBD,MAqBM;AACLA,MAAG,oBAAH;AACA;AAED;AA5BwB,CAA1B;AA8BAiB,OAAOC,OAAP,GAAiBrB,mBAAjB","file":"TextParser.js","sourceRoot":"C:/Users/OfficePC/Desktop/NodejsAutomation/Utility","sourcesContent":["\r\nvar Converter = require('csvtojson').Converter;\r\nvar BusinessRuleMethod = require('../BusinessRulesValidation/businessRules')\r\n\r\nvar fs = require('fs');\r\n\r\n// transactions.ReadAndValidateTransactionData('./input/input1.txt');\r\n\r\nvar ProcessDataFromFile = {\r\n\tReadAndValidateDataFromFile: function(filePath, fn){\r\n\t\t\r\n\t\tif (fs.existsSync(filePath)){\r\n\t\t\tconsole.log('file exits');\r\n\t\t\tvar fileExtension = filePath.split('.').pop()\r\n\t\t\tif (fileExtension === 'txt'){\r\n\t\t\tconsole.log('file extension is correct');\r\n\t\t\t\t\t\tvar converter = new Converter({});\r\n\t\t\t\t\t\tconverter.fromFile(filePath,function(err,results){\r\n\t\t\t\t\t\t\tvar tranStatus=[];\r\n\t\t\t\t\t\t\tfor(var i = 0 ; i< results.length;i++){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tvar validationResults = BusinessRuleMethod.applybusinessRules(results[i]);\r\n\t\t\t\tconsole.log('validationResults - '+validationResults);\r\n\t\t\t\ttranStatus.push(validationResults)\t;\t\t\r\n\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\tfn(tranStatus);\r\n\t\t\t\t\t})\r\n\t\t\t}else {\r\n\t\t\t\tfn('Invalid File Type');\r\n\t\t\t}\r\n\r\n\t\t}else {\r\n\t\t\tfn('File do not exists');\r\n\t\t}\r\n\r\n\t}\r\n};\r\nmodule.exports = ProcessDataFromFile;"]}