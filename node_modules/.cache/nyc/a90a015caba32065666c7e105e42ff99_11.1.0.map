{"version":3,"sources":["TextParser.js"],"names":["Converter","require","BusinessRuleMethod","fs","TextParserMethod","Parsetextfile","filePath","fn","filename","split","pop","existsSync","fileExtension","converter","fromFile","err","results","tranStatus","i","length","validationResults","applybusinessRules","push","module","exports"],"mappings":";;AACA,IAAIA,YAAYC,QAAQ,WAAR,EAAqBD,SAArC;AACA,IAAIE,qBAAqBD,QAAQ,0CAAR,CAAzB;AACA,IAAIE,KAAKF,QAAQ,IAAR,CAAT;;AAEA,IAAIG,mBAAmB;AACtBC,gBAAe,uBAASC,QAAT,EAAmBC,EAAnB,EAAsB;;AAEnC,MAAIC,WAAWF,SAASG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAAf;;AAED,MAAIP,GAAGQ,UAAH,CAAcL,QAAd,CAAJ,EAA4B;;AAE3B,OAAIM,gBAAgBN,SAASG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAApB;AACA,OAAIE,kBAAkB,KAAtB,EAA4B;;AAEzB,QAAIC,YAAY,IAAIb,SAAJ,CAAc,EAAd,CAAhB;AACAa,cAAUC,QAAV,CAAmBR,QAAnB,EAA4B,UAASS,GAAT,EAAaC,OAAb,EAAqB;AAChD,SAAIC,aAAW,EAAf;AACA,UAAI,IAAIC,IAAI,CAAZ,EAAgBA,IAAGF,QAAQG,MAA3B,EAAkCD,GAAlC,EAAsC;;AAEzC,UAAIE,oBAAoBlB,mBAAmBmB,kBAAnB,CAAsCL,QAAQE,CAAR,CAAtC,CAAxB;AACA,UAAGE,kBAAkBD,MAAlB,GAAyB,CAA5B,EACA;AACCF,kBAAWK,IAAX,CAAgBF,iBAAhB;AAEA;AAEI;AACFb,QAAGU,UAAH;AACD,KAbA;AAcF,IAjBD,MAiBM;;AAEJV,OAAG,mBAAH;AACD;AAED,GAzBD,MAyBM;AACFA,MAAG,oBAAH;AACH;AAED;AAlCqB,CAAvB;AAoCAgB,OAAOC,OAAP,GAAiBpB,gBAAjB","file":"TextParser.js","sourceRoot":"C:/Users/OfficePC/Desktop/NodejsAutomation/Utility","sourcesContent":["\r\nvar Converter = require('csvtojson').Converter;\r\nvar BusinessRuleMethod = require('../BusinessRulesValidation/businessRules')\r\nvar fs = require('fs');\r\n\r\nvar TextParserMethod = {\r\n\tParsetextfile: function(filePath, fn){\r\n\t\t\r\n\t\t var filename = filePath.split(\"/\").pop();\r\n\r\n\t\tif (fs.existsSync(filePath)){\r\n\t\t\t\r\n\t\t\tvar fileExtension = filePath.split('.').pop()\r\n\t\t\tif (fileExtension === 'txt'){\r\n\t\t\t\r\n\t\t\t\t\t\tvar converter = new Converter({});\r\n\t\t\t\t\t\tconverter.fromFile(filePath,function(err,results){\r\n\t\t\t\t\t\t\tvar tranStatus=[];\r\n\t\t\t\t\t\t\tfor(var i = 0 ; i< results.length;i++){\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tvar validationResults = BusinessRuleMethod.applybusinessRules(results[i]);\r\n\t\t\t\tif(validationResults.length>0)\r\n\t\t\t\t{\r\n\t\t\t\t\ttranStatus.push(validationResults);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\tfn(tranStatus);\r\n\t\t\t\t\t})\r\n\t\t\t}else {\r\n\t\t\t\t \r\n\t\t\t\t fn(\"Invalid File Type\");\r\n\t\t\t}\r\n\r\n\t\t}else {\r\n\t\t\t\t  fn(\"File do not exists\");\r\n\t\t}\r\n\r\n\t}\r\n};\r\nmodule.exports = TextParserMethod;"]}