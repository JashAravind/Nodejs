{"version":3,"sources":["businessRules.js"],"names":["Converter","require","fs","dateTimevalidation","txnIdValidation","txnAmountvalidation","applybusinessRules","jsonObj","console","log","validationResults","obj","numberValidation","push","amountValidation","dateValidation","module","exports"],"mappings":";;AACA,IAAIA,YAAYC,QAAQ,WAAR,EAAqBD,SAArC;AACA,IAAIE,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,qBAAqBF,QAAQ,kCAAR,CAAzB;AACA,IAAIG,kBAAkBH,QAAQ,+BAAR,CAAtB;AACA,IAAII,sBAAsBJ,QAAQ,mCAAR,CAA1B;;AAEA,SAASK,kBAAT,CAA4BC,OAA5B,EACA;AACCC,SAAQC,GAAR,CAAY,SAAZ;;AAEA,KAAIC,oBAAoB,EAAxB;;AAEA,MAAK,IAAIC,GAAT,IAAgBJ,OAAhB,EAAyB;;AAEjB,UAAQI,GAAR;AACL,QAAK,MAAL;AACO,QAAI,CAACP,gBAAgBQ,gBAAhB,CAAiCL,QAAQI,GAAR,CAAjC,CAAL,EACC;;AAEM,SAAIA,MAAM;AACnB,cAAQJ,QAAQI,GAAR,CADW;AAEnB,qBAAe;;AAFI,MAAV;AAKbD,uBAAkBG,IAAlB,CAAuBF,GAAvB;AAEK;AACC;AACP,QAAK,UAAL;AACO,QAAIJ,QAAQI,GAAR,KAAc,EAAlB,EACC;AACa,SAAIA,MAAM;AAC1B,cAAQJ,QAAQI,GAAR,CADkB;AAE1B,qBAAe;;AAFW,MAAV;AAKpBD,uBAAkBG,IAAlB,CAAuBF,GAAvB;AAEK;AACC;AACP,QAAK,WAAL;AAAkB;AACX,QAAI,CAACN,oBAAoBS,gBAApB,CAAqCP,QAAQI,GAAR,CAArC,CAAL,EACC;;AAEX,SAAIA,MAAM;AACF,cAAQJ,QAAQI,GAAR,CADN;AAEF,qBAAe;;AAFb,MAAV;AAKID,uBAAkBG,IAAlB,CAAuBF,GAAvB;AAGK;AACC;AACP,QAAK,SAAL;;AAGO;AACP,QAAK,UAAL;;AAEC,QAAG,CAACR,mBAAmBY,cAAnB,CAAkCR,QAAQI,GAAR,CAAlC,CAAJ,EACA;AACC,SAAIA,MAAM;AACP,cAAQJ,QAAQI,GAAR,CADD;AAEP,qBAAe;;AAFR,MAAV;AAKDD,uBAAkBG,IAAlB,CAAuBF,GAAvB;AAEC;AACK;AACJ;;AAED,QAAIA,MAAM;AACP,aAAQJ,QAAQI,GAAR,CADD;AAEP,oBAAe;;AAFR,KAAV;AAKDD,sBAAkBG,IAAlB,CAAuBF,GAAvB;AACM;AAjEF,GAkEC;AAGR;;AAEF,QAAOD,iBAAP;AAEC;;AAEDM,OAAOC,OAAP,GAAiBX,kBAAjB","file":"businessRules.js","sourceRoot":"C:/Users/OfficePC/Desktop/Nodejspractise/appliation","sourcesContent":["\r\nvar Converter = require('csvtojson').Converter;\r\nvar fs = require('fs');\r\nvar dateTimevalidation = require('../appliation/dateTimevalidation');\r\nvar txnIdValidation = require('../appliation/txnIdValidation');\r\nvar txnAmountvalidation = require('../appliation/txnAmountvalidation');\r\n\r\nfunction applybusinessRules(jsonObj)\r\n{\r\n\tconsole.log(\"entered\");\r\n\r\n\tvar validationResults = [];\r\n\r\n\tfor (var obj in jsonObj) {\r\n\r\n\t        switch (obj) {\r\n\t\t\t\tcase 'txid':\r\n\t\t\t        if (!txnIdValidation.numberValidation(jsonObj[obj]))\r\n\t\t\t        \t{\r\n\t\t\t\t\t\t\t\t        \t\t\r\n\t\t\t\t\t\t\t\t        \t\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'txid is not in number format',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\r\n\t\t\t    \t\t}\r\n\t\t\t        break;\r\n\t\t\t\tcase 'clientid':\r\n\t\t\t        if (jsonObj[obj]=='') \r\n\t\t\t        \t{\r\n\t\t\t        \t\t\t\t        \t\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'client id cannot be null or empty',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\r\n\t\t\t    \t\t}\r\n\t\t\t        break;\r\n\t\t\t\tcase 'txnamount': // assuming amount is number format checking if valus is Not a number\r\n\t\t\t        if (!txnAmountvalidation.amountValidation(jsonObj[obj])) \r\n\t\t\t        \t{\t\t        \t\r\n\t\t\t        \t\t\r\n\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'txnamount is not in expected format',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\r\n\r\n\t\t\t    \t\t}\r\n\t\t\t        break;\r\n\t\t\t\tcase 'product':\r\n\t\t\t       \r\n\r\n\t\t\t        break;\r\n\t\t\t\tcase 'datetime':\r\n\r\n\t\t\t\t\tif(!dateTimevalidation.dateValidation(jsonObj[obj]))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'Date time provided is either in future or not valid',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t        break;\t\t\t\t\t\r\n\t\t\t    default:\r\n\t\t\t    \t\r\n\t\t\t\t\t\tvar obj = {\r\n\t\t\t\t\t    'txid': jsonObj[obj],\r\n\t\t\t\t\t    'description': 'unexpected key and this key is not handled',\r\n\t\t\t\t\t   \r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalidationResults.push(obj);\r\n\t\t\t        break;\r\n\t        };\r\n\r\n\r\n\t}\r\n\r\nreturn validationResults;\r\n\r\n}\r\n\r\nmodule.exports = applybusinessRules;"]}